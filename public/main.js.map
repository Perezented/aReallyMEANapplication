{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"jumbotron text-center bg-secondary\">\r\n  <h1 class=\"text-white\"><b>A Really MEAN App</b></h1>\r\n  <p class=\"lead\" class=\"text-white\">Welcome to a custom really MEAN app.</p>\r\n  <div>\r\n    <a\r\n      *ngIf=\"!authService.loggedIn()\"\r\n      [routerLink]=\"['/register']\"\r\n      class=\"btn btn-primary\"\r\n      >Register</a\r\n    >\r\n    <a\r\n      *ngIf=\"!authService.loggedIn()\"\r\n      [routerLink]=\"['/login']\"\r\n      class=\"btn btn-secondary active\"\r\n      >Login</a\r\n    >\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\">\r\n    <h3><b>MongoDB</b></h3>\r\n    <p>\r\n      Mongo Atlas is used to connect to the database. Heroku is used to deploy\r\n      but since Nov. 2020, mLabs is not available. Other options were available\r\n      but Mongo Atlas worked excellent with Heroku.\r\n    </p>\r\n    <p>\r\n      User database is housed by a MongoDB server. Mongoose was used in the\r\n      Node/Express section to connect to MongoDB. A Mongoose Schema was used as\r\n      well in the Users model to confirm the users sent in to register. Bcrypt\r\n      was used to hash the passwords to save on the database. It then compares\r\n      to authorize users to specific protected routes.\r\n    </p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3><b>Angular</b></h3>\r\n    <p>\r\n      The login to this page to view all components is 'admin' with a password\r\n      of 'password'.\r\n    </p>\r\n    <p>\r\n      The page you are currently on was developed using Angular. It is comprised\r\n      of 6 main components with some helpers. The login and register information\r\n      is relayed to the Node/Express + MongoDB server. It is hashed in between\r\n      so the database is not holding text passwords, very important. Flash\r\n      messages are used to display quick messages when a user is logged in or\r\n      not able to log in. There is some incorporation of AuthGuards so a user\r\n      cannot get to '/profile' nor '/dashboard' until logged in. The nav bar\r\n      will check to see if a user is logged in to display the correct\r\n      'login/logout' links.\r\n    </p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3><b>Express/Node</b></h3>\r\n    <p>\r\n      Back end server is developed using Node.js alongside its trusty sidekick,\r\n      Express.js. The server is also running on CORS, JSON Web Token\r\n      passport-jwt, Mongoose. Passport simplified the JSON Web Token\r\n      authentication to authorize logged-in users to protected routes.\r\n      Authentication is received using an 'Authentication header with a\r\n      'bearer'. A JWT is sent back to the front end for the rest of the session,\r\n      6 hrs. The server is currently mainly for users’ information to register\r\n      and log in.\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(    public authService: AuthService,\r\n) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"user\">\r\n  <h2 class=\"page-header\"><b>Profile Page</b></h2>\r\n  <h3 class=\"page-header\">{{ user.name }}</h3>\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item\"><b>Username: </b>{{ user.username }}</li>\r\n    <li class=\"list-group-item\"><b>Email: </b>{{ user.email }}</li>\r\n    <li class=\"list-group-item\"><b>UserID: </b>{{ user._id }}</li>\r\n  </ul>\r\n</div>\r\n<div *ngIf=\"!user\">\r\n  <h1 class=\"page-header\">Not Authorized</h1>\r\n  <p>Please login to view your profile page.</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile().subscribe(profileData => {\r\n      this.user = profileData['user']\r\n    },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      })\r\n  }\r\n}\r\n","<section *ngIf=\"user\">\r\n  <h2 class=\"page-header\"><b>Dashboard</b></h2>\r\n  <p>Welcome to your dashboard, {{ user.name }}</p>\r\n  <div class=\"list-group\">\r\n    <h3>List of all users registered in our system:</h3>\r\n    <div class=\"list-group-item flex\" *ngFor=\"let user of users\">\r\n      <p><b>Username: </b>{{ user.username }}</p>\r\n      <p><b>Name: </b>{{ user.name }}</p>\r\n      <p><b>Email: </b>{{ user.email }}</p>\r\n      <p><b>UserID: </b>{{ user._id }}</p>\r\n    </div>\r\n  </div>\r\n</section>\r\n<div *ngIf=\"!user\">\r\n  <h1 class=\"page-header\">Not Authorized</h1>\r\n  <p>Please login to view your profile page.</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  users: Object;\r\n  user: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getAllUsers().subscribe(profileData => {\r\n          this.users = profileData['users']\r\n    },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n          })\r\n    \r\n    this.authService.getProfile().subscribe(profileData => {\r\n      this.user = profileData['user']\r\n    },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      })\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-src';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService, private router: Router) {\r\n    \r\n  }\r\n\r\n  canActivate() {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false\r\n    }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private flashMessage: FlashMessagesService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  onLoginSubmit() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n\r\n    this.authService.authenticateUser(user).subscribe(\r\n      data => {\r\n        if (data['success']===true) {\r\n          this.authService.storeUserData(data['token'], data['user']);\r\n          this.flashMessage.show(\"You are now logged in, \" + data['msg'], {cssClass: 'alert-success', timeout: 5000})\r\n          this.router.navigateByUrl('/dashboard');\r\n        } else {\r\n        this.flashMessage.show(data['msg'] + \" For testing purposes, try admin, password\", {cssClass: 'alert-danger', timeout: 10000})\r\n        this.router.navigate(['login'])\r\n        }\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n}\r\n","<h2 class=\"page-header\">Login</h2>\r\n<form (submit)=\"onLoginSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"username\"\r\n        name=\"username\"\r\n        required\r\n        autocomplete=\"on\"\r\n      />\r\n    </label>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"password\"\r\n        name=\"password\"\r\n        required\r\n        autocomplete=\"on\"\r\n      />\r\n    </label>\r\n  </div>\r\n  <input type=\"submit\" value=\"Login\" class=\"btn btn-primary\" />\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  name: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n\r\n\r\n  constructor(private validateService: ValidateService, private flashMessage: FlashMessagesService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    const user = {\r\n      name: this.name,\r\n      email: this.email,\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n\r\n    // Required Fields\r\n    if (!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.show(\"Please fill in all the fields\", {cssClass: 'alert-danger', timeout: 3000})\r\n      return false\r\n    }\r\n    if (!this.validateService.validateEmail(this.email)) {\r\n            this.flashMessage.show(\"Please fill in a valid email\", {cssClass: 'alert-danger', timeout: 3000})\r\n      return false\r\n    }\r\n    console.log(user)\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if (data['success'] === true) {\r\n        this.flashMessage.show(\"you are now registered and can log in\", { cssClass: 'alert-success', timeout: 3000 })\r\n        this.router.navigate(['/login'])\r\n      } else {\r\n        this.flashMessage.show(\"Uh-oh, something went wrong. Please try again\", {cssClass: 'alert-danger', timeout: 3000})\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h2 class=\"page-header\">Register</h2>\r\n<form (submit)=\"onRegisterSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Username</label>\r\n    <input\r\n      type=\"text\"\r\n      [(ngModel)]=\"username\"\r\n      name=\"username\"\r\n      class=\"form-control\"\r\n      required\r\n      autocomplete=\"on\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      [(ngModel)]=\"name\"\r\n      name=\"name\"\r\n      class=\"form-control\"\r\n      required\r\n      autocomplete=\"on\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email</label>\r\n    <input\r\n      type=\"text\"\r\n      [(ngModel)]=\"email\"\r\n      name=\"email\"\r\n      class=\"form-control\"\r\n      required\r\n      autocomplete=\"on\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"pasword\">Password</label>\r\n    <input\r\n      type=\"password\"\r\n      [(ngModel)]=\"password\"\r\n      name=\"password\"\r\n      class=\"form-control\"\r\n      autocomplete=\"on\"\r\n      required\r\n    />\r\n  </div>\r\n\r\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\nimport {AuthService} from './services/auth.service'\r\nimport {ValidateService} from './services/validate.service'\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {AuthGuard} from './guards/auth.guard'\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] }  \r\n]\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    FlashMessagesModule.forRoot(),\r\n    HttpClientModule\r\n  ],\r\n  providers: [ValidateService, AuthService, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user) {\r\n    if(user.name === undefined || user.email === undefined|| user.password === undefined|| user.username === undefined){return false}else return true\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n}\r\n","<div class=\"p-0 bg-secondary\">\r\n  <header class=\"d-flex justify-content-center py-3\">\r\n    <ul class=\"nav nav-pills\">\r\n      <li\r\n        class=\"nav-item\"\r\n        [routerLinkActive]=\"['active']\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        <a [routerLink]=\"['/']\" class=\"nav-link\">Home</a>\r\n      </li>\r\n\r\n      <li\r\n        *ngIf=\"authService.loggedIn()\"\r\n        class=\"nav-item\"\r\n        [routerLinkActive]=\"['active']\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        <a [routerLink]=\"['/dashboard']\" class=\"nav-link\">Dashboard</a>\r\n      </li>\r\n      <li\r\n        *ngIf=\"authService.loggedIn()\"\r\n        class=\"nav-item\"\r\n        [routerLinkActive]=\"['active']\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        <a [routerLink]=\"['/profile']\" class=\"nav-link\">Profile</a>\r\n      </li>\r\n\r\n      <li\r\n        *ngIf=\"!authService.loggedIn()\"\r\n        class=\"nav-item\"\r\n        [routerLinkActive]=\"['active']\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        <a [routerLink]=\"['/login']\" class=\"nav-link\">Login</a>\r\n      </li>\r\n\r\n      <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\">\r\n        <a (click)=\"onLogoutClick()\" class=\"nav-link\">Logout</a>\r\n      </li>\r\n\r\n      <li\r\n        *ngIf=\"!authService.loggedIn()\"\r\n        class=\"nav-item\"\r\n        [routerLinkActive]=\"['active']\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        <a [routerLink]=\"['/register']\" class=\"nav-link\">Register</a>\r\n      </li>\r\n    </ul>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  user: Object;\r\n  constructor(\r\n    public authService: AuthService,\r\n    private flashMessage: FlashMessagesService,\r\n    private router: Router\r\n  ) { }\r\n  \r\n  ngOnInit(): void {\r\n    if (this.authService.loggedIn()) {\r\n      this.user = localStorage['user']\r\n    } else this.user = null;\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.authService.logout();\r\n    this.flashMessage.show(\"You have successfully logged out\", { cssClass: 'alert-success', timeout: 3000 });\r\n    this.router.navigateByUrl('/login');\r\n    this.user = null;\r\n    this.ngOnInit();\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, { headers: headers })\n    .pipe(map((res)=> res)\n    );\n    \n  }\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/login', user, { headers: headers })\n    .pipe(map((res)=> res)\n    );\n  }\n  \n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('bearer_token', 'bearer ' + token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn() {\n    if (localStorage['id_token']) {\n      return true\n    }else return false\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  // gets profile page, sending token to authorize it\n  getProfile() {\n    this.loadBearerToken();\n    let headers = new HttpHeaders({\n      'Authorization': this.authToken,\n      'Content-Type': 'application/json'\n    });\n    return this.http.get('users/profile',  { headers: headers })\n    .pipe(map((res)=> res)\n    );\n  }\n  \n  // Gets all users info\n  getAllUsers() {\n    this.loadBearerToken();\n    let headers = new HttpHeaders({\n      'Authorization': this.authToken,\n      'Content-Type': 'application/json'\n    });\n    return this.http.get('users',  { headers: headers })\n    .pipe(map((res)=> res)\n    );\n  \n  }\n\n  // Fetches from local storage\n  loadBearerToken() {\n    const token = localStorage.getItem(\"bearer_token\");\n    this.authToken = token;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}